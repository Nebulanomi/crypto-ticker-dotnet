@page "/fetchdata"
@inject HttpClient Http
@using Microsoft.AspNetCore.SignalR.Client;
@inject NavigationManager NavigationManager


<h1>Crypto Prices</h1>
<span> SignalR status: @hubConnection.State</span>

@if (prices == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
              
                <th>Name. </th>
                <th>Current Price. </th>
                <th>Symbol</th>
                <th>Market Cap</th>
                <th>Total Volume. </th>
                <th>Price chance 24h</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var coin in prices)
            {
                <tr>
                    
                    <td>@coin.name</td>
                    <td>@coin.current_price</td>
                    <td>@coin.Symbol</td>
                    <td>@coin.market_cap</td>
                    <td>@coin.total_volume</td>
                    <td class="@( coin.price_change_percentage_24h > 0? "green" : "red")">@coin.price_change_percentage_24h%</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
  
    private Coin[] prices;
    private HubConnection hubConnection;
    public bool IsConnected => hubConnection.State == HubConnectionState.Connected;

    protected override async Task OnInitializedAsync()
    {
        

        hubConnection = new HubConnectionBuilder().WithUrl("http://localhost:7071/api").Build();

        

        hubConnection.On<Coin[]>("updated", (coin) =>
            {

                prices = coin;
            
                StateHasChanged();


            }
                         
            );
   
        await hubConnection.StartAsync();
        
        // 

          
    }

     public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }

    



    // Root myDeserializedClass = JsonConvert.DeserializeObject<Root>(myJsonResponse); 
   

    public class Coin
    {
        public string id { get; set; }
        public string Symbol { get; set; }
        public string name { get; set; }
        public string image { get; set; }
        public double current_price { get; set; }
        public object market_cap { get; set; }
        public object total_volume { get; set; }
        public double price_change_percentage_24h { get; set; }
        public double market_cap_change_24h { get; set; }
        public double market_cap_change_percentage_24h { get; set; }
    }

}
